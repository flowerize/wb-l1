package main

import (
	"fmt"
	"strings"
)

// –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã (–±–µ–∑ —É—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞)
func AllUnique(s string) bool {
	s = strings.ToLower(s)
	charsMap := make(map[rune]bool)
	for _, ch := range s {
		if charsMap[ch] {
			return false
		}
		charsMap[ch] = true
	}
	return true
}

func main() {
	tests := []string{
		"abcd",
		"abCdefAaf",
		"aabcd",
		"–ê–∞–ë–±",
		"–ø—Ä–∏–≤–µ—Ç",
		"üòÄüòÄ",
		"GoLang",
		"1234567890",
		"!@#$%^&*()",
	}

	for _, test := range tests {
		fmt.Printf("–°—Ç—Ä–æ–∫–∞: %q ‚Üí %t\n", test, AllUnique(test))
	}
}
